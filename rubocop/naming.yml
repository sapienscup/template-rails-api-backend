inherit_from: default.yml

Naming/AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  StyleGuide: '#accessor_mutator_method_names'
  Enabled: true
  VersionAdded: '0.50'

Naming/AsciiIdentifiers:
  Description: 'Use only ascii symbols in identifiers and constants.'
  StyleGuide: '#english-identifiers'
  Enabled: true
  AsciiConstants: true

Naming/BinaryOperatorParameterName:
  Description: 'When defining binary operators, name the argument other.'
  StyleGuide: '#other-arg'
  Enabled: true

Naming/BlockParameterName:
  Description: >-
                 Checks for block parameter names that contain capital letters,
                 end in numbers, or do not meet a minimal length.
  Enabled: true
  MinNameLength: 1
  AllowNamesEndingInNumbers: true

Naming/ClassAndModuleCamelCase:
  Description: 'Use CamelCase for classes and modules.'
  StyleGuide: '#camelcase-classes'
  Enabled: true
  AllowedNames:
    - module_parent

Naming/ConstantName:
  Description: 'Constants should use SCREAMING_SNAKE_CASE.'
  StyleGuide: '#screaming-snake-case'
  Enabled: true
  VersionAdded: '0.50'

Naming/FileName:
  Description: 'Use snake_case for source file names.'
  StyleGuide: '#snake-case-files'
  Enabled: true
  VersionAdded: '0.50'
  # Camel case file names listed in `AllCops:Include` and all file names listed
  # in `AllCops:Exclude` are excluded by default. Add extra excludes here.
  Exclude: []
  # When `true`, requires that each source file should define a class or module
  # with a name which matches the file name (converted to ... case).
  # It further expects it to be nested inside modules which match the names
  # of subdirectories in its path.
  ExpectMatchingDefinition: false
  # When `false`, changes the behavior of ExpectMatchingDefinition to match only
  # whether each source file's class or module name matches the file name --
  # not whether the nested module hierarchy matches the subdirectory path.
  CheckDefinitionPathHierarchy: true
  # If non-`nil`, expect all source file names to match the following regex.
  # Only the file name itself is matched, not the entire file path.
  # Use anchors as necessary if you want to match the entire name rather than
  # just a part of it.
  Regex: ~
  # With `IgnoreExecutableScripts` set to `true`, this cop does not
  # report offending filenames for executable scripts (i.e. source
  # files with a shebang in the first line).
  IgnoreExecutableScripts: true
  AllowedAcronyms:
    - CLI
    - DSL
    - ACL
    - API
    - ASCII
    - CPU
    - CSS
    - DNS
    - EOF
    - GUID
    - HTML
    - HTTP
    - HTTPS
    - ID
    - IP
    - JSON
    - LHS
    - QPS
    - RAM
    - RHS
    - RPC
    - SLA
    - SMTP
    - SQL
    - SSH
    - TCP
    - TLS
    - TTL
    - UDP
    - UI
    - UID
    - UUID
    - URI
    - URL
    - UTF8
    - VM
    - XML
    - XMPP
    - XSRF
    - XSS

Naming/MethodName:
  Description: 'Use the configured style when naming methods.'
  StyleGuide: '#snake-case-symbols-methods-vars'
  Enabled: true
  VersionAdded: '0.50'
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case
    - camelCase
  # Method names matching patterns are always allowed.
  #
  #   AllowedPatterns:
  #     - '\A\s*onSelectionBulkChange\s*'
  #     - '\A\s*onSelectionCleared\s*'
  #
  AllowedPatterns: []

Naming/MethodParameterName:
  Description: >-
                 Checks for method parameter names that contain capital letters,
                 end in numbers, or do not meet a minimal length.
  Enabled: true
  VersionAdded: '0.53'
  VersionChanged: '0.77'
  # Parameter names may be equal to or greater than this value
  MinNameLength: 3
  AllowNamesEndingInNumbers: true
  # Allowed names that will not register an offense
  AllowedNames:
    - at
    - by
    - db
    - id
    - in
    - io
    - ip
    - of
    - 'on'
    - os
    - pp
    - to
  # Forbidden names that will register an offense
  ForbiddenNames: []

Naming/PredicateName:
  Description: 'Check the names of predicate methods.'
  StyleGuide: '#bool-methods-qmark'
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '0.77'
  # Predicate name prefixes.
  NamePrefix:
    - is_
    - has_
    - have_
  # Predicate name prefixes that should be removed.
  ForbiddenPrefixes:
    - is_
    - has_
    - have_
  # Predicate names which, despite having a forbidden prefix, or no `?`,
  # should still be accepted
  AllowedMethods:
    - is_a?
  # Method definition macros for dynamically generated methods.
  MethodDefinitionMacros:
    - define_method
    - define_singleton_method
  # Exclude Rspec specs because there is a strong convention to write spec
  # helpers in the form of `have_something` or `be_something`.
  Exclude:
    - 'spec/**/*'

Naming/RescuedExceptionsVariableName:
  Description: 'Use consistent rescued exceptions variables naming.'
  Enabled: true
  VersionAdded: '0.67'
  VersionChanged: '0.68'
  PreferredName: e

Naming/VariableName:
  Description: 'Use the configured style when naming variables.'
  StyleGuide: '#snake-case-symbols-methods-vars'
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '1.8'
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case
    - camelCase
  AllowedIdentifiers: []

Naming/VariableNumber:
  Description: 'Use the configured style when numbering symbols, methods and variables.'
  StyleGuide: '#snake-case-symbols-methods-vars-with-numbers'
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '1.4'
  EnforcedStyle: normalcase
  SupportedStyles:
    - snake_case
    - normalcase
    - non_integer
  CheckMethodNames: true
  CheckSymbols: true
  AllowedIdentifiers:
    - capture3     # Open3.capture3
    - iso8601      # Time#iso8601
    - rfc1123_date # CGI.rfc1123_date
    - rfc822       # Time#rfc822
    - rfc2822      # Time#rfc2822
    - rfc3339      # DateTime.rfc3339
